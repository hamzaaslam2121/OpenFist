{"ast":null,"code":"var _jsxFileName = \"/Users/hamzaaslam/VSCode/opensourceprojects/openfist/src/pages/Searched.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Searched() {\n  _s();\n  const [searched, setSearched] = useState([]);\n  let params = useParams();\n  const getSearched = async name => {\n    const api = await fetch(`https://api.github.com/search/repositories?q=${name}&sort=stars&order=desc&per_page=9`, {\n      headers: {\n        Authorization: process.env.GITHUB_ACCESS_TOKEN\n      }\n    });\n    const data = await api.json();\n    setSearched(data.items);\n  };\n  useEffect(() => {\n    getSearched(params.search);\n  }, [params.search]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: \"searched.map((repo))\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Searched, \"i6Wy3V6uvdf2gTjDzKaGUpZTDh4=\", false, function () {\n  return [useParams];\n});\n_c = Searched;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n  grid-gap: 3rem;\n  `;\n_c2 = Grid;\nconst Card = styled.div`\nposition: relative;\n  height: 16rem; \n  border-radius: 2rem;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n img{\n  width: 100%;\n  border-radius: 2rem;\n }\n  a {\n    text-decoration: none;\n  }\n  h4{\n    text-align: center;\n    padding: 1rem;\n  }\n  &::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 20%;\n    background-color: rgba(0, 0, 0, 0.6);\n    z-index: 1;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out;\n  }\n\n  &:hover::before {\n    opacity: 1;\n  }\n  `;\nconst TextContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding: 1rem;\n  box-sizing: border-box; \n  z-index: 2;\n  text-align: center;\n  color: white;\n`;\nexport default Searched;\nvar _c, _c2;\n$RefreshReg$(_c, \"Searched\");\n$RefreshReg$(_c2, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Searched","_s","searched","setSearched","params","getSearched","name","api","fetch","headers","Authorization","process","env","GITHUB_ACCESS_TOKEN","data","json","items","search","Grid","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","styled","div","_c2","Card","TextContainer","$RefreshReg$"],"sources":["/Users/hamzaaslam/VSCode/opensourceprojects/openfist/src/pages/Searched.jsx"],"sourcesContent":["\nimport React from 'react'\nimport {useState, useEffect} from 'react';\nimport {useParams} from 'react-router-dom';\n\n\nfunction Searched() {\n\n    const [searched, setSearched] = useState([]);\n    let params = useParams();\n\n  const getSearched = async(name) => {\n    const api = await fetch(\n      `https://api.github.com/search/repositories?q=${name}&sort=stars&order=desc&per_page=9`,\n    {\n      headers: {\n        Authorization: process.env.GITHUB_ACCESS_TOKEN,  \n      },\n    }\n    )\n    const data = await api.json();\n    setSearched(data.items);\n  }\n\n  useEffect(() => {\n    getSearched(params.search);\n  }, [params.search]);\n\n  return (\n    <Grid>\n        searched.map((repo))\n\n    </Grid>\n  )\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n  grid-gap: 3rem;\n  `;\n\nconst Card = styled.div`\nposition: relative;\n  height: 16rem; \n  border-radius: 2rem;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n img{\n  width: 100%;\n  border-radius: 2rem;\n }\n  a {\n    text-decoration: none;\n  }\n  h4{\n    text-align: center;\n    padding: 1rem;\n  }\n  &::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 20%;\n    background-color: rgba(0, 0, 0, 0.6);\n    z-index: 1;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out;\n  }\n\n  &:hover::before {\n    opacity: 1;\n  }\n  `;\n\n  const TextContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding: 1rem;\n  box-sizing: border-box; \n  z-index: 2;\n  text-align: center;\n  color: white;\n`;\n\n\n\nexport default Searched"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,SAAS,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAIS,MAAM,GAAGP,SAAS,CAAC,CAAC;EAE1B,MAAMQ,WAAW,GAAG,MAAMC,IAAI,IAAK;IACjC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,gDAA+CF,IAAK,mCAAkC,EACzF;MACEG,OAAO,EAAE;QACPC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;MAC7B;IACF,CACA,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7BZ,WAAW,CAACW,IAAI,CAACE,KAAK,CAAC;EACzB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdS,WAAW,CAACD,MAAM,CAACa,MAAM,CAAC;EAC5B,CAAC,EAAE,CAACb,MAAM,CAACa,MAAM,CAAC,CAAC;EAEnB,oBACElB,OAAA,CAACmB,IAAI;IAAAC,QAAA,EAAC;EAGN;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEX;AAACtB,EAAA,CA5BQD,QAAQ;EAAA,QAGAH,SAAS;AAAA;AAAA2B,EAAA,GAHjBxB,QAAQ;AA8BjB,MAAMkB,IAAI,GAAGO,MAAM,CAACC,GAAI;AACxB;AACA;AACA;AACA,GAAG;AAACC,GAAA,GAJET,IAAI;AAMV,MAAMU,IAAI,GAAGH,MAAM,CAACC,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AAED,MAAMG,aAAa,GAAGJ,MAAM,CAACC,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAID,eAAe1B,QAAQ;AAAA,IAAAwB,EAAA,EAAAG,GAAA;AAAAG,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAH,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}