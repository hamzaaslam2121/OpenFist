{"ast":null,"code":"var _jsxFileName = \"/Users/hamzaaslam/VSCode/opensourceprojects/openfist/src/pages/Languages.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { styled } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Languages() {\n  _s();\n  const [language, setLanguage] = useState([]);\n  let params = useParams();\n  const getLanguages = async name => {\n    const api = await fetch(`https://api.github.com/search/repositories?q=${name}&sort=stars&order=desc&per_page=9`, {\n      headers: {\n        Authorization: process.env.GITHUB_ACCESS_TOKEN\n      }\n    });\n    const data = await api.json();\n    setLanguage(data.items);\n  };\n  useEffect(() => {\n    getLanguages(params.type);\n    console.log(params.type);\n  }, [params.type]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: languages.map(item => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: repo.owner.avatar_url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Languages, \"IuOf8z+Olzzd4dcS6Ex+r+tvANA=\", false, function () {\n  return [useParams];\n});\n_c = Languages;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n  grid-gap: 3rem;\n  `;\n_c2 = Grid;\nconst Card = styled.div`\n img{\n  width: 100%;\n  border-radius: 2rem;\n }\n  a {\n    text-decoration: none;\n  }\n  h4{\n    text-align: center;\n    padding: 1rem;\n  }`;\n_c3 = Card;\nexport default Languages;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Languages\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","styled","motion","Link","useParams","jsxDEV","_jsxDEV","Languages","_s","language","setLanguage","params","getLanguages","name","api","fetch","headers","Authorization","process","env","GITHUB_ACCESS_TOKEN","data","json","items","type","console","log","Grid","children","languages","map","item","Card","src","repo","owner","avatar_url","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","_c3","$RefreshReg$"],"sources":["/Users/hamzaaslam/VSCode/opensourceprojects/openfist/src/pages/Languages.jsx"],"sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport { styled } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Link, useParams } from 'react-router-dom';\n\nfunction Languages() {\n\n  const [language, setLanguage] = useState([]);\n  let params = useParams();\n\n  const getLanguages = async(name) => {\n    const api = await fetch(\n      `https://api.github.com/search/repositories?q=${name}&sort=stars&order=desc&per_page=9`,\n    {\n      headers: {\n        Authorization: process.env.GITHUB_ACCESS_TOKEN,  \n      },\n    }\n    )\n    const data = await api.json();\n    setLanguage(data.items);\n  }\n\n    useEffect(() => {\n        getLanguages(params.type)\n        console.log(params.type)\n    }, [params.type]);\n\n  return (\n    <Grid>\n      {languages.map((item) => {\n        return(\n          <Card>\n            <img src={repo.owner.avatar_url} alt=\"\" />\n          </Card>\n        )\n      })}\n\n    </Grid>\n  )\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n  grid-gap: 3rem;\n  `;\n\nconst Card = styled.div`\n img{\n  width: 100%;\n  border-radius: 2rem;\n }\n  a {\n    text-decoration: none;\n  }\n  h4{\n    text-align: center;\n    padding: 1rem;\n  }`\n\nexport default Languages"],"mappings":";;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAIY,MAAM,GAAGP,SAAS,CAAC,CAAC;EAExB,MAAMQ,YAAY,GAAG,MAAMC,IAAI,IAAK;IAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,gDAA+CF,IAAK,mCAAkC,EACzF;MACEG,OAAO,EAAE;QACPC,aAAa,EAAEC,OAAO,CAACC,GAAG,CAACC;MAC7B;IACF,CACA,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7BZ,WAAW,CAACW,IAAI,CAACE,KAAK,CAAC;EACzB,CAAC;EAECvB,SAAS,CAAC,MAAM;IACZY,YAAY,CAACD,MAAM,CAACa,IAAI,CAAC;IACzBC,OAAO,CAACC,GAAG,CAACf,MAAM,CAACa,IAAI,CAAC;EAC5B,CAAC,EAAE,CAACb,MAAM,CAACa,IAAI,CAAC,CAAC;EAEnB,oBACElB,OAAA,CAACqB,IAAI;IAAAC,QAAA,EACFC,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;MACvB,oBACEzB,OAAA,CAAC0B,IAAI;QAAAJ,QAAA,eACHtB,OAAA;UAAK2B,GAAG,EAAEC,IAAI,CAACC,KAAK,CAACC,UAAW;UAACC,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEX;AAACjC,EAAA,CAnCQD,SAAS;EAAA,QAGHH,SAAS;AAAA;AAAAsC,EAAA,GAHfnC,SAAS;AAqClB,MAAMoB,IAAI,GAAG1B,MAAM,CAAC0C,GAAI;AACxB;AACA;AACA;AACA,GAAG;AAACC,GAAA,GAJEjB,IAAI;AAMV,MAAMK,IAAI,GAAG/B,MAAM,CAAC0C,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AAAAE,GAAA,GAXEb,IAAI;AAaV,eAAezB,SAAS;AAAA,IAAAmC,EAAA,EAAAE,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}